name: 1.2 Landing Page Form Screenshots

on:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  screenshots:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.1-jammy
    env:
      HOME: /root
    outputs:
      screenshots_list: ${{ steps.run_screenshots.outputs.screenshots_list }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run screenshots
        id: run_screenshots
        run: |
          FULL_URL="https://main-sd-preprod.dev.essr.ch/formation/formation-secretaire-medicale-ppc"
          echo "Using URL: $FULL_URL"
          export URL="$FULL_URL"
          node screenshot.js
          echo "screenshots_list=$(ls screenshots/*.png | xargs -n1 basename | paste -sd, -)" >> $GITHUB_OUTPUT

      - name: Upload screenshots to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./screenshots

      - name: Upload screenshots as ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-zip
          path: ./screenshots

  deploy:
    runs-on: ubuntu-latest
    needs: screenshots
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  comment-pages:
    runs-on: ubuntu-latest
    needs: [deploy, screenshots]
    steps:
      - name: Comment screenshots via Pages
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let prNumber;
            if (context.payload.pull_request) {
              prNumber = context.payload.pull_request.number;
            } else if (context.payload.workflow_run && context.payload.workflow_run.pull_requests.length > 0) {
              prNumber = context.payload.workflow_run.pull_requests[0].number;
            } else {
              console.log("No PR found. Skipping comment.");
              return;
            }
            const screenshots = '${{ needs.screenshots.outputs.screenshots_list }}'.split(",");
            const pageUrl = '${{ needs.deploy.outputs.page_url }}'.replace(/\/$/, "");
            let body = "ðŸ–¼ **Form Screenshots via Pages**\n\n";
            for (const file of screenshots) {
              body += `**${file}**\n\n`;
              body += `![](${pageUrl}/${file})\n\n`;
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body
            });

  comment-artifact:
    runs-on: ubuntu-latest
    needs: screenshots
    steps:
      - name: Comment with artifact link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let prNumber;
            if (context.payload.pull_request) {
              prNumber = context.payload.pull_request.number;
            } else if (context.payload.workflow_run && context.payload.workflow_run.pull_requests.length > 0) {
              prNumber = context.payload.workflow_run.pull_requests[0].number;
            } else {
              console.log("No PR found. Skipping comment.");
              return;
            }
            const body = `ðŸ“¦ **Screenshots available as artifact ZIP**\n\nðŸ‘‰ [Download ZIP](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}?check_suite_focus=true)`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body
            });
